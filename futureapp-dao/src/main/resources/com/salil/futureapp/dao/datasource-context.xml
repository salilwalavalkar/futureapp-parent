<?xml version="1.0" encoding="UTF-8"?>
<!-- #SPRING -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <!-- #HSQL connection properties used for data source -->
	<bean id="customDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver"/>
		<property name="url" value="jdbc:hsqldb:hsql://localhost"/>
		<property name="username" value="sa" />
		<property name="password" value="" />
		<property name="maxActive" value="15" />
		<property name="maxIdle" value="5" />
		<property name="maxWait" value="60000" />
	</bean>
	
	<!-- 
	    hibernate.hbm2ddl.auto Automatically validates or exports schema DDL to the database when the SessionFactory 
	    is created. With create-drop, the database schema will be dropped when the SessionFactory is closed explicitly.
	    e.g. validate | update | create | create-drop
		So the list of possible options are,
	    1. validate: validate the schema, makes no changes to the database.
	    2. update: update the schema.
	    3. create: creates the schema, destroying previous data.
	    4. create-drop: drop the schema at the end of the session.
	    #HSQL used in dialect
	 -->
	<bean id="springSessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="customDataSource"/>
		<property name="packagesToScan" value="com.salil.futureapp.dao.entity"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="org.hibernate">true</prop>
				<prop key="hibernate.hbm2ddl.auto">none</prop>
			</props>
		</property>
		<property name="mappingResources">
			<list>
				<value>com/salil/futureapp/dao/queries/student.hbm.xml</value>
			</list>
		</property>		
	</bean>	
 		
</beans>